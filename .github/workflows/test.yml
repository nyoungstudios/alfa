name: Test

# Run only one unique workflow at a time on a pr
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

on:
  push:
  pull_request:
    paths:
      - ".github/workflows/test.yml"
      - "functions/**"
      - "tests/**"
      - "pubspec.yaml"
  workflow_dispatch:

jobs:
  test-functions-schema:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable

      - name: Install dependencies
        run: dart pub get

      - name: Run tests
        run: dart test tests/test_functions.dart

  find-functions:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      matrix: ${{ env.matrix }}
      length: ${{ env.length }}

    steps:
      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable

      - name: Install dependencies
        run: dart pub get

      - name: Get available functions
        run: dart run tests/get_functions.dart -o /tmp/matrix.json

      - name: Print matrix
        run: jq . /tmp/matrix.json

      - name: Writes yaml filters
        run: |
          filters="$(jq '(.include[].sourcePath as $sourcePath | $sourcePath | sub("^functions/"; "") | sub("/$"; "") + ": [ " + $sourcePath + "** ]")' -r /tmp/matrix.json)"
          echo "$filters" > /tmp/filters.yml

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: /tmp/filters.yml

      - name: Output changes to json
        run: |
          echo '${{ steps.changes.outputs.changes }}' > /tmp/changes.json
          jq . /tmp/changes.json

      - name: Create filtered matrix
        run: |
          # creates matrix from changes
          jq -c '. | map(. | {"sourcePath": .}) | {"include": .}' /tmp/changes.json > /tmp/filtered_matrix.json

          # prints json file for debugging
          jq . /tmp/filtered_matrix.json

          # sets matrix output
          echo "matrix=$(cat /tmp/filtered_matrix.json)" >> $GITHUB_ENV
          echo "length=$(jq 'length' /tmp/changes.json)" >> $GITHUB_ENV
